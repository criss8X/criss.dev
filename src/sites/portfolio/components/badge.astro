---
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const badgeVariants = cva(
  "inline-flex select-none cursor-default items-center justify-center rounded-full border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden",
  {
    variants: {
      variant: {
        default:
          "border bg-purple-600/20 text-purple-300 border-purple-600/30 border-b-2",
        secondary: "border-transparent bg-secondary text-secondary-foreground",
        destructive:
          "border-transparent bg-destructive text-white focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
        outline: "text-xs border-b-2 border-purple-400/30 text-purple-300",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  },
);

interface Props {
  variant?: VariantProps<typeof badgeVariants>["variant"];
  className?: string;
}

const { variant, className } = Astro.props as Props;
---

<span translate="no" class={cn(badgeVariants({ variant }), className)}>
  <slot />
</span>
