---
import { ExternalLink, Github } from "./icon.astro";
import Badge from "./ui/badge.astro";
import Button from "./ui/button.astro";
import Card from "./ui/card.astro";
import LinkButton from "./ui/link-button.astro";

type Project = {
  name: string;
  desc: string;
  stack: string[];
  github: string;
  preview?: string;
};

const projects: Project[] = [
  {
    name: "Force4G",
    desc: "Aplicación para forzar la 4G del teléfono que ocupa menos de 250 KB",
    stack: ["Kotlin", "Mobile Dev"],
    github: "https://github.com/criss8X/Force4G",
  },
  {
    name: "Mirage",
    desc: "Cliente web simple, ligero y personalizable para el protocolo Matrix con interfaz limpia y fácil de usar",
    stack: [
      "TypeScript",
      "React",
      "SCSS/SASS",
      "Matrix JS SDK",
      "Vite.js",
      "Zustand",
      "Storybook.js",
    ],
    github: "https://github.com/yuri-xyz/mirage",
  },
  {
    name: "ERC20 Vault",
    desc: "Contrato inteligente para almacenamiento seguro de tokens ERC20 con funcionalidades de depósito y retiro",
    stack: ["Solidity", "Ethereum", "Smart Contracts", "Web3"],
    github: "https://github.com/yuri-xyz/erc20-vault",
  },
];
---

<section id="projects" class="container mx-auto max-w-6xl px-4 py-20">
  <div class="text-center space-y-12">
    <h2 class="text-3xl md:text-4xl font-bold">
      <span class="text-purple-400">// </span>Proyectos Destacados
    </h2>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        projects.map(({ name, desc, stack, github, preview }) => (
          <Card className="group relative bg-card/50 backdrop-blur border-border/50 hover:bg-card/70 hover:border-purple-400/50 transition-all duration-300 overflow-hidden">
            {/* Shine effect */}
            <div
              class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none project-glow"
              style={{
                background: `linear-gradient(to top, rgba(147, 51, 234, 0.2) 0%, rgba(168, 85, 247, 0.15) 30%, transparent 70%)`,
              }}
            />

            <Card variant="header">
              <Card
                variant="title"
                className="flex items-center justify-between  text-lg relative z-10"
              >
                {name}
              </Card>

              <Card variant="description" className="relative z-10 text-left">
                {desc}
              </Card>
            </Card>

            <Card variant="content" className="relative z-10">
              <div class="flex flex-wrap gap-1 mb-4">
                {stack.map((label) => (
                  <Badge
                    variant="outline"
                    className="text-xs border-purple-400/30 text-purple-300"
                  >
                    {label}
                  </Badge>
                ))}
              </div>

              <div class="flex gap-2">
                <LinkButton
                  size="sm"
                  variant="outline"
                  href={github}
                  target="_blank"
                >
                  <Github class="h-4 w-4 mr-1" />
                  Github
                </LinkButton>

                {preview && (
                  <LinkButton size="sm" href={preview} target="_blank">
                    <ExternalLink class="h-4 w-4 mr-1" />
                    Preview
                  </LinkButton>
                )}
              </div>
            </Card>
          </Card>
        ))
      }
    </div>
  </div>
</section>
