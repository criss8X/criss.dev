---
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

const cardVariants = cva("", {
  variants: {
    variant: {
      root: "bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",
      header:
        "@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",
      footer: "flex items-center px-6 [.border-t]:pt-6",
      description: "text-muted-foreground text-sm",
      content: "px-6",
      action: "col-start-2 row-span-2 row-start-1 self-start justify-self-end",
      title: "leading-none font-semibold",
    },
  },
  defaultVariants: {
    variant: "root",
  },
});

interface Props {
  className?: string;
  variant?: VariantProps<typeof cardVariants>["variant"];
}

const { className, variant } = Astro.props as Props;

const dataSlot = variant === "root" ? "card" : `card-${variant}`;
---

<div data-slot={dataSlot} class={cn(cardVariants({ variant }), className)}>
  <slot />
</div>
